name: Preview Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  preview:
    name: Deploy Preview
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate preview name
        id: preview
        run: |
          # Generate a safe hostname from PR number and branch
          PR_NUM=${{ github.event.pull_request.number }}
          BRANCH_NAME=${{ github.head_ref }}

          # Sanitize branch name for hostname
          SAFE_BRANCH=$(echo "$BRANCH_NAME" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9-]/-/g' | sed 's/--*/-/g' | sed 's/^-//' | sed 's/-$//')

          # Truncate if too long (max 63 chars for hostname)
          SAFE_BRANCH=$(echo "$SAFE_BRANCH" | cut -c1-50)

          PREVIEW_HOSTNAME="pr-${PR_NUM}-${SAFE_BRANCH}"
          PREVIEW_DATASET="preview-pr-${PR_NUM}"

          echo "hostname=$PREVIEW_HOSTNAME" >> $GITHUB_OUTPUT
          echo "dataset=$PREVIEW_DATASET" >> $GITHUB_OUTPUT

      - name: Setup Sanity
        uses: dcilke/sanity-actions/setup-sanity@v1
        with:
          token: ${{ secrets.SANITY_AUTH_TOKEN }}

      - name: Create preview dataset
        uses: dcilke/sanity-actions/dataset-import@v1
        with:
          token: ${{ secrets.SANITY_AUTH_TOKEN }}
          input-path: ./data/preview-seed.ndjson
          create-dataset: true
          dataset-visibility: private

      - name: Build and Deploy preview
        id: deploy-preview
        uses: dcilke/sanity-actions/build-and-deploy@v1
        with:
          # Core configuration
          token: ${{ secrets.SANITY_DEPLOY_TOKEN }}
          studio-hostname: ${{ steps.preview.outputs.hostname }}

          # Build configuration for preview
          build: true
          cache-dependencies: true
          upload-artifacts: true # Keep preview build artifacts
          artifact-name: preview-build-pr-${{ github.event.pull_request.number }}

          # Development-friendly build settings
          source-maps: true # Enable source maps for debugging
          no-minify: true # Skip minification for easier debugging
          schema-required: false # Allow experimental schemas in previews

          # Preview environment variables
          environment-variables: |
            SANITY_STUDIO_API_DATASET=${{ steps.preview.outputs.dataset }}
            SANITY_STUDIO_PROJECT_ID=${{ secrets.SANITY_PROJECT_ID }}
            SANITY_STUDIO_PREVIEW_MODE=true
            SANITY_STUDIO_PR_NUMBER=${{ github.event.pull_request.number }}
            SANITY_STUDIO_PR_BRANCH=${{ github.head_ref }}

          # GraphQL for previews (optional)
          deploy-graphql: true
          graphql-tag: preview-${{ github.event.pull_request.number }}
          graphql-dataset: ${{ steps.preview.outputs.dataset }}
          graphql-playground: true # Always enable playground for previews

          # Deployment settings
          wait-for-deployment: true
          deployment-timeout: 30 # Shorter timeout for previews
          comment-on-pr: false # We'll create a custom comment

      - name: Comment preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const previewUrl = '${{ steps.deploy-preview.outputs.studio-url }}';
            const graphqlUrl = '${{ steps.deploy-preview.outputs.graphql-url }}';
            const graphqlPlayground = '${{ steps.deploy-preview.outputs.graphql-playground-url }}';
            const buildSize = '${{ steps.deploy-preview.outputs.build-size }}';
            const dataset = '${{ steps.preview.outputs.dataset }}';

            const body = `## 🚀 Preview Deployment Ready!

            Your changes have been deployed to a preview environment:

            ### 🎭 Studio
            🔗 **Preview URL:** ${previewUrl}
            📊 **Dataset:** \`${dataset}\`
            📏 **Build Size:** ${buildSize}

            ${graphqlUrl ? `### 🔌 GraphQL API
            🔗 **Endpoint:** ${graphqlUrl}
            🎮 **Playground:** ${graphqlPlayground}
            🏷️ **Tag:** \`preview-${{ github.event.pull_request.number }}\`
            ` : ''}

            ### 🛠️ Build Configuration:
            - 🗺️ Source maps enabled for debugging
            - 📝 Minification disabled for easier inspection
            - 🧪 Experimental schemas allowed
            - 📦 Build artifacts available in workflow

            ### 🔄 Updates:
            - **Last Updated:** ${new Date().toLocaleString()}
            - **Branch:** \`${{ github.head_ref }}\`
            - **Commit:** \`${{ github.event.pull_request.head.sha.substring(0, 7) }}\`

            ### 🧹 Cleanup:
            This preview will be automatically removed when the PR is closed.

            ---
            <sub>🤖 Deployed by Sanity GitHub Actions | PR #${{ github.event.pull_request.number }}</sub>`;

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Preview Deployment Ready')
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body
              });
            }

  cleanup:
    name: Cleanup Preview
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'

    steps:
      - name: Setup Sanity
        uses: dcilke/sanity-actions/setup-sanity@v1
        with:
          token: ${{ secrets.SANITY_AUTH_TOKEN }}

      - name: Delete preview dataset
        run: |
          PREVIEW_DATASET="preview-pr-${{ github.event.pull_request.number }}"

          echo "🧹 Cleaning up preview dataset: $PREVIEW_DATASET"

          sanity dataset delete "$PREVIEW_DATASET" \
            --project "${{ secrets.SANITY_PROJECT_ID }}" \
            --token "${{ secrets.SANITY_AUTH_TOKEN }}" \
            --force

      - name: Comment cleanup
        uses: actions/github-script@v7
        with:
          script: |
            const body = `## 🧹 Preview Cleaned Up

            The preview deployment for this PR has been removed.

            ---
            <sub>🤖 Cleaned by Sanity GitHub Actions</sub>`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
